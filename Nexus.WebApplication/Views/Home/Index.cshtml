@using Nexus_WebApplication.Models
@using Nexus.Core.Entities
@{
    ViewBag.Title = "Index";
}

<div class="panel panel-primary">
    <div class="panel-heading">
        Marketing Activities 
        @(Html.DevExtreme().Button().Type(ButtonType.Default).Icon("plus").OnClick("activityCreateOnClick"))
    </div>
    <div class="panel-body">
    @(Html.DevExtreme().Scheduler()
        .ID("activityScheduler")
        .DataSource(ds => ds
            .OData()
            .Version(4)
            .Url("/odata/" + EntityUrlHelper.GetEntityUrlName("MarketingActivity"))
            .Key("Id")
        )
        .Height(750)
        .StartDateExpr("DateFrom")
        .EndDateExpr("DateTo")
        .TextExpr("Name")
        .Views(new SchedulerViewType[] {
            SchedulerViewType.Month
        })
        .CurrentView(SchedulerViewType.Month)
        .FirstDayOfWeek(FirstDayOfWeek.Monday)
        .RecurrenceEditMode(SchedulerRecurrenceEditMode.Series)
        .Editing(e => e
            .AllowAdding(false)
            .AllowDeleting(false)
            .AllowUpdating(false))
        .Resources(res =>
        {
            res.Add()
                .FieldExpr("ClientId")
                .Label("Client")
                .DataSource(ds => ds
                    .OData()
                    .Version(4)
                    .Url("/odata/Clients")
                    .Key("Id"))
                .DisplayExpr("Name")
                .ValueExpr("Id");

            res.Add()
                .FieldExpr("ProductLinkId")
                .Label("ProductLink")
                .DataSource(ds => ds
                    .OData()
                    .Version(4)
                    .Url("/odata/ProductLinks")
                    .Key("Id"))
                .DisplayExpr("Id")
                .ValueExpr("Id");

            res.Add()
                .FieldExpr("Discount")
                .Label("Discount");

            res.Add()
                .FieldExpr("MarginPercent")
                .Label("MarginPercent");

            res.Add()
                .FieldExpr("PlanedSalesAmount")
                .Label("PlanedSalesAmount");
            
        })
        .ShowAllDayPanel(false)
        //.DropDownAppointmentTemplate(new TemplateName("dropDownAppointmentTemplate"))
        .AppointmentTooltipTemplate(new TemplateName("dropDownAppointmentTemplate"))
    )
    </div>
</div>

@using (Html.DevExtreme().NamedTemplate("dropDownAppointmentTemplate"))
{
    @(Html.DevExtreme().Button()
        .ID("show_button")
        .OnClick("activitiesShow")
        .Option("marketingActivityId", new JS("Id"))
        .Type(ButtonType.Default)
        .Text("Show"))
}

@(Html.DevExtreme().Popup()
    .ID("marketing_activity_popup")
    .ShowTitle(true)
    .Title("Activity")
    .Visible(false)
    .DragEnabled(true)
    .CloseOnOutsideClick(true)
    .OnShowing("marketingActivityFormOnInitialized")
    .ContentTemplate(new TemplateName("activity_form_template"))
)

@using (Html.DevExtreme().NamedTemplate("activity_form_template"))
{
    @(Html.DevExtreme().Form<MarketingActivity>()
        .ID("marketing_activity_form")
        .Items(items =>
        {
            items.AddGroup()
                .Caption("Main")
                .ColCount(3)
                .Items(mainItems =>
                {
                    mainItems.AddSimpleFor(c => c.Id);
                    mainItems.AddSimpleFor(c => c.ProductLinkId);
                    mainItems.AddSimpleFor(c => c.Name);
                    mainItems.AddSimpleFor(c => c.ClientId);
                    mainItems.AddSimpleFor(c => c.DateFrom);
                    mainItems.AddSimpleFor(c => c.DateTo);
                    mainItems.AddSimpleFor(c => c.Discount);
                    mainItems.AddSimpleFor(c => c.MarginPercent);
                    mainItems.AddSimpleFor(c => c.PlanedSalesAmount);
                });

            items.AddButton()
                .Name("activity_form_create_button")
                .ButtonOptions(opt => opt
                    .Text("Create")
                    .ID("activity_form_create_button")
                    .Icon("plus")
                    .OnClick("activity_form_create_button_click"));

            items.AddButton()
                .ButtonOptions(opt => opt
                    .Text("Save")
                    .ID("activity_form_save_button")
                    .Icon("save")
                    .OnClick("activity_form_save_button_click"));

            items.AddGroup()
                .Caption("Events")
                .Template(new TemplateName("activity_form_template_detail"));

        })
    )
}

@using (Html.DevExtreme().NamedTemplate("activity_form_template_detail"))
{
    @(Html.DevExtreme().TabPanel()
        .ID("SubActivityTabPanel")
        .DataSource(ds => ds
            .Array()
            .Data(new List<string>() { "Products", "Places", "PlaceDisplays" }.ToArray())
        ).AnimationEnabled(false)
        .SwipeEnabled(false)
        .Height("50%")
        .ItemTemplate(new TemplateName("SubActivityTabPanelTemplate"))
        .OnSelectionChanged("subActivityTabPanelOnSelectionChanged")

    )
}

@using (Html.DevExtreme().NamedTemplate("SubActivityTabPanelTemplate"))
{
    <div style="height: 45%">
        <div class="dx-error-message">Error</div>
    </div>
}

<script type="text/javascript">

    function marketingActivityFormOnInitialized(e) {
        console.log('china2', e);
        var poput = getPoput();
        var id = poput.option('marketingActivityId');

        var btn = getCreateButton();
        btn.option('visible', true);

        var btnSave = getSaveButton();
        btnSave.option('visible', false);

        if (id > 0) {

            btn.option('visible', false);
            btnSave.option('visible', true);
            $.get('/odata/MarketingActivities(' + id + ')', null, function (data) {
                
                delete data["@@odata.context"]

                console.log('succ req', data);

                var form = getForm();

                form.option('formData', data);
            });
        }
    }

    function activity_form_create_button_click(e) {
        var form = getForm();
        var data = form.option('formData');

        $.ajax('/odata/MarketingActivities', {
            data: JSON.stringify(data),
            contentType: 'application/json',
            type: 'POST',
            success: function (e) {
                var popup = getPoput();
                popup.option('visible', false);
                marketingActivitiesReload();
            }
        });

        console.log(data);
    }

    function activity_form_save_button_click(e) {
        var form = getForm();
        console.log(form.option('formData'));

        var context = getSchedulerStore();
        context.reload();

    }

    function activitiesShow(e, a, b) {
        var button = $('#show_button').dxButton('instance');
        var id = button.option('marketingActivityId');
        var popup = getPoput();
        popup.option('marketingActivityId', id);
        popup.show();

        console.log(popup.option('marketingActivityId'));
    }

    function activityCreateOnClick() {
        console.log('china create');
        var popup = getPoput();
        popup.option('marketingActivityId', 0);
        popup.show();

        console.log(popup.option('marketingActivityId'));
    }

    function getForm() {
        return $('#marketing_activity_form').dxForm('instance');
    }
    function getPoput() {
        return $("#marketing_activity_popup").dxPopup("instance");
    }

    function getCreateButton() {
        return $('#activity_form_create_button').dxButton('instance');
    }

    function getSaveButton() {
        return $('#activity_form_save_button').dxButton('instance');
    }

    function getSchedulerStore() {
        return $('#activityScheduler').dxScheduler('getDataSource');
    }

    function marketingActivitiesReload() {
        var context = getSchedulerStore();
        context.reload();;
    }

    function subActivityTabPanelOnSelectionChanged(e) {
        var type = "error";
        var message = "disbled";
        DevExpress.ui.notify(message, type, 600);
    }

</script>